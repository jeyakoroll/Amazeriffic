const main = () => {
  "use strict";
// Variables
let toDos = [
  'Закончить читать эту книгу',
  'Вывести Барбоса на прогулку в парк',
  'Ответить на почту',
  'Подготовится к тринировке в понедельник',
  'Обновить несколько новых задач',
  'Купить продукты'
],
  toDosNew = [
  'Сделать несколько макетов по верстке',
  'Научится писать приложения на React',
  'Выучить азы по NodeJS',
  'Помочь другу с ремонтом'
];

// Function
  // Make all tabs inactive
  // Make the first tab active
  // Clear the main content to redefine it
  // Returns false since we do not follow the link

$(".tabs a span").toArray().forEach((elem) => {
  // Create a click handler for this item
  $(elem).on("click", () => {
    let $elem = $(elem),
        $content = $("<ul>"),
        $input = $("<input>").addClass("input"),
        $button = $("<button type='submit' name='addTask'>").
                  addClass("button").
                  text("Добавить");


    $(".tabs span").removeClass("active");
    $elem.addClass("active");
    $("main .content").empty();
    // content for first tab
      if ($elem.parent().is(":nth-child(1)")) {
        $content;
        toDosNew.forEach((todo) => {
          $content.append($("<li>").text(todo));
        });
        $("main .content").append($content);
        // content for second tab
      } else if ($elem.parent().is(":nth-child(2)")) {
        $content;
        toDos.forEach((todo) => {
          $content.append($('<li>').text(todo));
        });
        $("main .content").append($content);
        // content for third tab
      } else if ($elem.parent().is(":nth-child(3)")) {
        $input, $button;
        const sendNewTask = () => {
          toDosNew.push($input.val());
          $input.val("");
        };
        $button.on("click", () => {
          sendNewTask();
        });
        $input.on("keypress", (e) => {
          if (e.keyCode === 13 && $input.val() !== "") {
            sendNewTask();
          }
        });

        $("main .content").append($input, $button);
      }
    return false;
  });
});



$(".tabs a:first-child span").trigger("click");
};
$(document).ready(main);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1haW4gPSAoKSA9PiB7XHJcbiAgXCJ1c2Ugc3RyaWN0XCI7XHJcbi8vIFZhcmlhYmxlc1xyXG5sZXQgdG9Eb3MgPSBbXHJcbiAgJ9CX0LDQutC+0L3Rh9C40YLRjCDRh9C40YLQsNGC0Ywg0Y3RgtGDINC60L3QuNCz0YMnLFxyXG4gICfQktGL0LLQtdGB0YLQuCDQkdCw0YDQsdC+0YHQsCDQvdCwINC/0YDQvtCz0YPQu9C60YMg0LIg0L/QsNGA0LonLFxyXG4gICfQntGC0LLQtdGC0LjRgtGMINC90LAg0L/QvtGH0YLRgycsXHJcbiAgJ9Cf0L7QtNCz0L7RgtC+0LLQuNGC0YHRjyDQuiDRgtGA0LjQvdC40YDQvtCy0LrQtSDQsiDQv9C+0L3QtdC00LXQu9GM0L3QuNC6JyxcclxuICAn0J7QsdC90L7QstC40YLRjCDQvdC10YHQutC+0LvRjNC60L4g0L3QvtCy0YvRhSDQt9Cw0LTQsNGHJyxcclxuICAn0JrRg9C/0LjRgtGMINC/0YDQvtC00YPQutGC0YsnXHJcbl0sXHJcbiAgdG9Eb3NOZXcgPSBbXHJcbiAgJ9Ch0LTQtdC70LDRgtGMINC90LXRgdC60L7Qu9GM0LrQviDQvNCw0LrQtdGC0L7QsiDQv9C+INCy0LXRgNGB0YLQutC1JyxcclxuICAn0J3QsNGD0YfQuNGC0YHRjyDQv9C40YHQsNGC0Ywg0L/RgNC40LvQvtC20LXQvdC40Y8g0L3QsCBSZWFjdCcsXHJcbiAgJ9CS0YvRg9GH0LjRgtGMINCw0LfRiyDQv9C+IE5vZGVKUycsXHJcbiAgJ9Cf0L7QvNC+0YfRjCDQtNGA0YPQs9GDINGBINGA0LXQvNC+0L3RgtC+0LwnXHJcbl07XHJcblxyXG4vLyBGdW5jdGlvblxyXG4gIC8vIE1ha2UgYWxsIHRhYnMgaW5hY3RpdmVcclxuICAvLyBNYWtlIHRoZSBmaXJzdCB0YWIgYWN0aXZlXHJcbiAgLy8gQ2xlYXIgdGhlIG1haW4gY29udGVudCB0byByZWRlZmluZSBpdFxyXG4gIC8vIFJldHVybnMgZmFsc2Ugc2luY2Ugd2UgZG8gbm90IGZvbGxvdyB0aGUgbGlua1xyXG5cclxuJChcIi50YWJzIGEgc3BhblwiKS50b0FycmF5KCkuZm9yRWFjaCgoZWxlbSkgPT4ge1xyXG4gIC8vIENyZWF0ZSBhIGNsaWNrIGhhbmRsZXIgZm9yIHRoaXMgaXRlbVxyXG4gICQoZWxlbSkub24oXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICBsZXQgJGVsZW0gPSAkKGVsZW0pLFxyXG4gICAgICAgICRjb250ZW50ID0gJChcIjx1bD5cIiksXHJcbiAgICAgICAgJGlucHV0ID0gJChcIjxpbnB1dD5cIikuYWRkQ2xhc3MoXCJpbnB1dFwiKSxcclxuICAgICAgICAkYnV0dG9uID0gJChcIjxidXR0b24gdHlwZT0nc3VibWl0JyBuYW1lPSdhZGRUYXNrJz5cIikuXHJcbiAgICAgICAgICAgICAgICAgIGFkZENsYXNzKFwiYnV0dG9uXCIpLlxyXG4gICAgICAgICAgICAgICAgICB0ZXh0KFwi0JTQvtCx0LDQstC40YLRjFwiKTtcclxuXHJcblxyXG4gICAgJChcIi50YWJzIHNwYW5cIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAkZWxlbS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICQoXCJtYWluIC5jb250ZW50XCIpLmVtcHR5KCk7XHJcbiAgICAvLyBjb250ZW50IGZvciBmaXJzdCB0YWJcclxuICAgICAgaWYgKCRlbGVtLnBhcmVudCgpLmlzKFwiOm50aC1jaGlsZCgxKVwiKSkge1xyXG4gICAgICAgICRjb250ZW50O1xyXG4gICAgICAgIHRvRG9zTmV3LmZvckVhY2goKHRvZG8pID0+IHtcclxuICAgICAgICAgICRjb250ZW50LmFwcGVuZCgkKFwiPGxpPlwiKS50ZXh0KHRvZG8pKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAkKFwibWFpbiAuY29udGVudFwiKS5hcHBlbmQoJGNvbnRlbnQpO1xyXG4gICAgICAgIC8vIGNvbnRlbnQgZm9yIHNlY29uZCB0YWJcclxuICAgICAgfSBlbHNlIGlmICgkZWxlbS5wYXJlbnQoKS5pcyhcIjpudGgtY2hpbGQoMilcIikpIHtcclxuICAgICAgICAkY29udGVudDtcclxuICAgICAgICB0b0Rvcy5mb3JFYWNoKCh0b2RvKSA9PiB7XHJcbiAgICAgICAgICAkY29udGVudC5hcHBlbmQoJCgnPGxpPicpLnRleHQodG9kbykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoXCJtYWluIC5jb250ZW50XCIpLmFwcGVuZCgkY29udGVudCk7XHJcbiAgICAgICAgLy8gY29udGVudCBmb3IgdGhpcmQgdGFiXHJcbiAgICAgIH0gZWxzZSBpZiAoJGVsZW0ucGFyZW50KCkuaXMoXCI6bnRoLWNoaWxkKDMpXCIpKSB7XHJcbiAgICAgICAgJGlucHV0LCAkYnV0dG9uO1xyXG4gICAgICAgIGNvbnN0IHNlbmROZXdUYXNrID0gKCkgPT4ge1xyXG4gICAgICAgICAgdG9Eb3NOZXcucHVzaCgkaW5wdXQudmFsKCkpO1xyXG4gICAgICAgICAgJGlucHV0LnZhbChcIlwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgICRidXR0b24ub24oXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICBzZW5kTmV3VGFzaygpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICRpbnB1dC5vbihcImtleXByZXNzXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAxMyAmJiAkaW5wdXQudmFsKCkgIT09IFwiXCIpIHtcclxuICAgICAgICAgICAgc2VuZE5ld1Rhc2soKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIm1haW4gLmNvbnRlbnRcIikuYXBwZW5kKCRpbnB1dCwgJGJ1dHRvbik7XHJcbiAgICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9KTtcclxufSk7XHJcblxyXG5cclxuXHJcbiQoXCIudGFicyBhOmZpcnN0LWNoaWxkIHNwYW5cIikudHJpZ2dlcihcImNsaWNrXCIpO1xyXG59O1xyXG4kKGRvY3VtZW50KS5yZWFkeShtYWluKTtcclxuIl19
